openapi: 3.0.3
info:
  title: Moni
  description: "inside"
  version: 0.0.1
servers:
  - url: http://127.0.0.1:8080/api/v1
security:
  - CookieAuth: []

paths:
  /auth/signup:
    post:
      tags:
        - Authorization
      summary: Signup user
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupUserRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignupUserResponse"

  /auth/login:
    post:
      tags:
        - Authorization
      summary: Login user
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginUserResponse"

  /auth/logout:
    delete:
      tags:
        - Authorization
      summary: Logout user
      security: []
      responses:
        "500":
          description: Internal error
          content: {}
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicResponse"

  /accounts/create:
    post:
      tags:
        - Accounts
      summary: Create an account
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"
  /accounts/list:
    get:
      tags:
        - Accounts
      summary: List user accounts
      security: [ ]
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserAccountsResponse"
  /accounts/refill:
    post:
      tags:
        - Accounts
      summary: Deposit money to account
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefillAccountRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefillAccountResponse"
  /accounts/withdraw:
    post:
      tags:
        - Accounts
      summary: Withdraw money from account
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WithdrawFromAccountRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WithdrawFromAccountResponse"

  /accounts/buy:
    post:
      tags:
        - Accounts
      summary: (BUY) Transfer moeny from one account to another with currency conversion
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakePurchaseRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakePurchaseResponse"

  /accounts/sell:
    post:
      tags:
        - Accounts
      summary: (SELL) Transfer moeny from one account to another with currency conversion
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MakeSaleRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MakeSaleResponse"

  /admin/login:
    post:
      tags:
        - Admin
      summary: Login as Admin
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminLoginRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success

  /admin/update_user_status:
    put:
      tags:
        - Admin
      summary: Update User Status
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUpdateUserStatusRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success

  /admin/list_users:
    post:
      tags:
        - Admin
      summary: List Users
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListUsersRequest"
        required: true
      responses:
        "500":
          description: Internal error
          content: { }
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"

components:
  parameters:
    orderParam:
      in: query
      name: order
      schema:
        type: string
        enum: ["asc", "desc"]
    limitParam:
      in: query
      name: limit
      description: Pass '-1' integer to get all entries
      schema:
        type: integer
        minimum: 1
        default: 10
    sortByParam:
      in: query
      name: sort_by
      schema:
        type: string
        enum: ["created_at"]
    offsetParam:
      in: query
      name: offset
      schema:
        type: integer
        default: 0
    selectorParam:
      in: query
      name: selector
      description: A string to search for in all fields
      schema:
        type: string

  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: AuthToken

  schemas:
    SignupUserRequest:
      type: object
      properties:
        email:
          type: string
          example: mail@example.com
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        password:
          type: string
          example: password

    SignupUserResponse:
      $ref: "#/components/schemas/User"

    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          example: mail@example.com
        password:
          type: string
          example: password

    LoginUserResponse:
      $ref: "#/components/schemas/User"

    CreateAccountRequest:
      type: object
      properties:
        currency:
          type: string
          example: RUB

    CreateAccountResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountItem'

    ListUserAccountsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountItem'

    RefillAccountRequest:
      type: object
      properties:
        account_number:
          type: string
          example: a515a4bc-6805-11ed-9022-0242ac120002
        debit_amount_cents:
          type: integer
          example: 123

    RefillAccountResponse:
      type: object
      properties:
        account_number:
          type: string
          example: fb33fd0e-6782-11ed-9022-0242ac120002
        old_balance:
          type: integer
          example: 1000
        new_balance:
          type: integer
          example: 1123
        purpose:
          type: string
          example: Пополнение счета с банковской карты

    WithdrawFromAccountRequest:
      type: object
      properties:
        account_number:
          type: string
          example: a515a4bc-6805-11ed-9022-0242ac120002
        credit_amount_cents:
          type: integer
          example: 123

    WithdrawFromAccountResponse:
      type: object
      properties:
        account_number:
          type: string
          example: fb33fd0e-6782-11ed-9022-0242ac120002
        old_balance:
          type: integer
          example: 1000
        new_balance:
          type: integer
          example: 877
        purpose:
          type: string
          example: Вывод со счета на банковскую карту

    MakePurchaseRequest:
      type: object
      properties:
        account_number_from:
          type: string
          example: fb33fd0e-6782-11ed-9022-0242ac120002
        currency_from:
          type: string
          example: "RUB"
        desired_amount_cents:
          type: integer
          example: 1000
        account_number_to:
          type: string
          example: c6f3c9e4-683f-11ed-9022-0242ac120002
        currency_to:
          type: string
          example: "USD"

    MakePurchaseResponse:
      type: object
      properties:
        old_account_from:
          $ref: '#/components/schemas/AccountItem'
        new_account_from:
          $ref: '#/components/schemas/AccountItem'
        old_account_to:
          $ref: '#/components/schemas/AccountItem'
        new_account_to:
          $ref: '#/components/schemas/AccountItem'
        purpose:
          type: string
          example: Перевод со счета c6f3c9e4-683f-11ed-9022-0242ac120002 (EUR) на счет fb33fd0e-6782-11ed-9022-0242ac120002 (RUB)

    MakeSaleRequest:
      type: object
      properties:
        account_number_from:
          type: string
          example: fb33fd0e-6782-11ed-9022-0242ac120002
        currency_from:
          type: string
          example: "USD"
        selling_amount_cents:
          type: integer
          example: 100
        account_number_to:
          type: string
          example: c6f3c9e4-683f-11ed-9022-0242ac120002
        currency_to:
          type: string
          example: "RUB"

    MakeSaleResponse:
      type: object
      properties:
        old_account_from:
          $ref: '#/components/schemas/AccountItem'
        new_account_from:
          $ref: '#/components/schemas/AccountItem'
        old_account_to:
          $ref: '#/components/schemas/AccountItem'
        new_account_to:
          $ref: '#/components/schemas/AccountItem'
        purpose:
          type: string
          example: Перевод со счета c6f3c9e4-683f-11ed-9022-0242ac120002 (EUR) на счет fb33fd0e-6782-11ed-9022-0242ac120002 (RUB)


    AccountItem:
      type: object
      properties:
        number:
          type: string
          example: fb33fd0e-6782-11ed-9022-0242ac120002
        user_id:
          type: string
          example: "1"
        currency:
          type: string
          example: RUB
        cents:
          type: string
          example: "10000"
        created_at:
          type: string
          example: 2006-1-2


    AdminLoginRequest:
      type: object
      properties:
        secret:
          type: string
          example: secret

    AdminUpdateUserStatusRequest:
      type: object
      properties:
        id:
          type: number
          example: 1
        status:
          type: string
          enum: [pending_approve, approved, banned]
    
    ListUsersRequest:
      type: object
      properties:
        status:
          type: string
          enum: [pending_approve, approved, banned]
        email_in:
          type: array
          items:
            type: string
    
    ListUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/User"
    
    User:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        image:
          type: string
        firstName:
          type: string
        lastName:
          type: string

    BasicResponse:
      type: object
